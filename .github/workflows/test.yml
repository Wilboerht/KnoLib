name: Test KnoLib

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '18'

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: knolib_test
          POSTGRES_USER: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    strategy:
      matrix:
        node-version: [18, 20]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Generate Prisma Client
      run: npx prisma generate

    - name: Run database migrations
      run: npx prisma migrate deploy
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/knolib_test

    - name: Seed test database
      run: npx prisma db seed
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/knolib_test

    - name: Run type checking
      run: npx tsc --noEmit

    - name: Run linting
      run: npm run lint

    - name: Run tests
      run: npm test
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/knolib_test
        REDIS_URL: redis://localhost:6379/0
        JWT_SECRET: test-jwt-secret-for-ci
        NEXTAUTH_SECRET: test-nextauth-secret-for-ci
        NEXTAUTH_URL: http://localhost:3000
        NODE_ENV: test

    - name: Build application
      run: npm run build
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/knolib_test
        JWT_SECRET: test-jwt-secret-for-ci
        NEXTAUTH_SECRET: test-nextauth-secret-for-ci
        NEXTAUTH_URL: http://localhost:3000

    - name: Upload coverage reports
      if: matrix.node-version == 18
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit --audit-level high

    - name: Run Snyk security scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high

  docker:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build Docker image
      run: docker build -t knolib:test .

    - name: Test Docker image
      run: |
        docker run --rm -d --name knolib-test -p 3000:3000 \
          -e DATABASE_URL=postgresql://test:test@localhost:5432/test \
          -e JWT_SECRET=test-secret \
          -e NEXTAUTH_SECRET=test-secret \
          knolib:test
        
        # Wait for container to start
        sleep 10
        
        # Test if container is running
        docker ps | grep knolib-test
        
        # Cleanup
        docker stop knolib-test
